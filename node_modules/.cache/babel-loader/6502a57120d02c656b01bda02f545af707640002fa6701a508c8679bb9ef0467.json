{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musta\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\data\\\\Checker-frontend-real\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { ethers } from 'ethers';\nimport { supabase } from './supabase';\nimport './App.css';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [tokenPrice, setTokenPrice] = useState('Loading...');\n  const [burnedAmount, setBurnedAmount] = useState(0);\n  const [treasuryAmount, setTreasuryAmount] = useState(0);\n  const [royaltiesAmount, setRoyaltiesAmount] = useState(0);\n  const [totalVolume, setTotalVolume] = useState(0);\n  const [priceChange24h, setPriceChange24h] = useState(null);\n  const [lastSync, setLastSync] = useState('Never');\n  const [totalSupply, setTotalSupply] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [priceLoading, setPriceLoading] = useState(true);\n\n  // User and token stats\n  const [userStats, setUserStats] = useState({\n    daily: 0,\n    weekly: 0,\n    monthly: 0,\n    total: 0\n  });\n  const [tokenStats, setTokenStats] = useState({\n    daily: 0,\n    weekly: 0,\n    monthly: 0,\n    total: 0\n  });\n  const [uniqueCreators, setUniqueCreators] = useState(0);\n  const [range, setRange] = useState('24h'); // all | 24h | 7d | 30d\n  const [rangeUsers, setRangeUsers] = useState(0);\n  const [rangeTokens, setRangeTokens] = useState(0);\n  const [rangeCreators, setRangeCreators] = useState(0);\n  const [tokenCreatorAgg, setTokenCreatorAgg] = useState({\n    '24h': {\n      tokens: 0,\n      creators: 0\n    },\n    '7d': {\n      tokens: 0,\n      creators: 0\n    },\n    '30d': {\n      tokens: 0,\n      creators: 0\n    },\n    all: {\n      tokens: 0,\n      creators: 0\n    }\n  });\n\n  // Configuration\n  const contractAddress = '0x1aE3498f1B417fe31BE544B04B711F27Ba437bd3';\n  const worldchainRPC = 'https://ancient-lingering-theorem.worldchain-mainnet.quiknode.pro/e675ad9beb96bbaacc8d48edfa4738642824c58e/';\n\n  // ERC20 ABI for totalSupply\n  const erc20ABI = useMemo(() => [\"function totalSupply() view returns (uint256)\"], []);\n\n  // Mock data for fallback\n  const mockData = useMemo(() => ({\n    tokenPrice: 0.0234,\n    burnedAmount: 1250000,\n    treasuryAmount: 890000,\n    royaltiesAmount: 340000,\n    lastUpdate: new Date()\n  }), []);\n\n  // Utility functions\n  const formatWeiToToken = useCallback(weiValue => {\n    try {\n      if (!weiValue || weiValue === '0') return 0;\n      const etherValue = ethers.formatEther(weiValue);\n      return parseFloat(etherValue);\n    } catch (error) {\n      console.error('Wei format error:', error, weiValue);\n      return 0;\n    }\n  }, []);\n  const getSinceHours = useCallback(hours => {\n    return new Date(Date.now() - hours * 60 * 60 * 1000);\n  }, []);\n\n  // Exact aggregates for tokens and unique creators as per Supabase queries\n  const fetchTokenCreatorAggregates = useCallback(async () => {\n    try {\n      console.log('üìä Aggregates: tokens & unique creators (24h/7d/30d/All)');\n      const fetchWindow = async since => {\n        // tokens count\n        const tokensQuery = supabase.from('tokens').select('*', {\n          count: 'exact',\n          head: true\n        });\n        if (since) tokensQuery.gte('created_at', since.toISOString());\n        const {\n          count: tokensCount,\n          error: tokensErr\n        } = await tokensQuery;\n        if (tokensErr) throw tokensErr;\n\n        // creators distinct count (client-side distinct)\n        const creatorsQuery = supabase.from('tokens').select('creator_id').not('creator_id', 'is', null);\n        if (since) creatorsQuery.gte('created_at', since.toISOString());\n        const {\n          data: creatorsData,\n          error: creatorsErr\n        } = await creatorsQuery;\n        if (creatorsErr) throw creatorsErr;\n        const uniqueCreatorIds = new Set((creatorsData || []).map(r => r.creator_id));\n        return {\n          tokens: tokensCount || 0,\n          creators: uniqueCreatorIds.size\n        };\n      };\n      const [agg24h, agg7d, agg30d, aggAll] = await Promise.all([fetchWindow(getSinceHours(24)), fetchWindow(getSinceHours(168)), fetchWindow(getSinceHours(720)), fetchWindow(null)]);\n      setTokenCreatorAgg({\n        '24h': agg24h,\n        '7d': agg7d,\n        '30d': agg30d,\n        all: aggAll\n      });\n      console.log('‚úÖ Aggregates loaded:', {\n        '24h': agg24h,\n        '7d': agg7d,\n        '30d': agg30d,\n        all: aggAll\n      });\n    } catch (e) {\n      console.error('‚ùå Aggregates error:', e);\n      setTokenCreatorAgg({\n        '24h': {\n          tokens: 0,\n          creators: 0\n        },\n        '7d': {\n          tokens: 0,\n          creators: 0\n        },\n        '30d': {\n          tokens: 0,\n          creators: 0\n        },\n        all: {\n          tokens: 0,\n          creators: 0\n        }\n      });\n    }\n  }, [getSinceHours]);\n  const formatNumber = useCallback(num => {\n    if (num >= 1000000) {\n      return (num / 1000000).toFixed(2) + 'M';\n    } else if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toLocaleString();\n  }, []);\n  const calculatePercentage = useCallback((value, total) => {\n    return value / total * 100;\n  }, []);\n  const calculateTotalVolume = useCallback(creatorRoyalty => {\n    if (!creatorRoyalty || creatorRoyalty <= 0) return 0;\n    const volumeMultiplier = 0.02 * 0.35; // 2%'nin 35'i = 0.007\n    return creatorRoyalty / volumeMultiplier;\n  }, []);\n\n  // API functions\n  const fetchTotalSupply = useCallback(async () => {\n    try {\n      console.log('üî¢ Total Supply fetching from contract...');\n      const provider = new ethers.JsonRpcProvider(worldchainRPC);\n      const contract = new ethers.Contract(contractAddress, erc20ABI, provider);\n      const totalSupplyWei = await contract.totalSupply();\n      const totalSupplyTokens = formatWeiToToken(totalSupplyWei.toString());\n      setTotalSupply(totalSupplyTokens);\n      console.log(`‚úÖ Total Supply: ${formatNumber(totalSupplyTokens)} PUF`);\n    } catch (error) {\n      console.error('‚ùå Total Supply fetch error:', error);\n      setTotalSupply(1000000000); // 1B tokens fallback\n      console.log('üîÑ Fallback: Total Supply = 1B PUF (approximate)');\n    }\n  }, [contractAddress, worldchainRPC, erc20ABI, formatWeiToToken, formatNumber]);\n  const fetchTokenPrice = useCallback(async () => {\n    try {\n      console.log('üí∞ Token price fetching from DexScreener...');\n      const pairAddress = '0x1D3bdD97F3772EAbe2c039476805376e788374d8';\n      const apiUrl = `https://api.dexscreener.com/latest/dex/pairs/worldchain/${pairAddress}`;\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`DexScreener API error: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data && data.pairs && data.pairs.length > 0) {\n        const pair = data.pairs[0];\n        const price = parseFloat(pair.priceUsd);\n        if (price && !isNaN(price)) {\n          var _pair$priceChange;\n          console.log(`‚úÖ $PUF price: $${price}`);\n          const priceChange24h = (_pair$priceChange = pair.priceChange) === null || _pair$priceChange === void 0 ? void 0 : _pair$priceChange.h24;\n          setTokenPrice(`$${price.toFixed(6)}`);\n          setPriceChange24h(priceChange24h);\n\n          // debug details (silenced)\n        } else {\n          throw new Error('Invalid price data');\n        }\n      } else {\n        throw new Error('Pair data not found');\n      }\n    } catch (error) {\n      console.error('‚ùå Token price error:', error);\n      console.log('üîÑ Fallback: Using mock data...');\n      const fallbackPrice = mockData.tokenPrice;\n      setTokenPrice(`$${fallbackPrice.toFixed(6)}`);\n      setPriceChange24h(null);\n\n      // Error styling would be handled in Header component\n    }\n  }, [mockData]);\n  const fetchTokenomicsData = useCallback(async () => {\n    try {\n      console.log('üìà Tokenomics data fetching...');\n      const apiUrl = 'https://puf-tracker-indexer-production.up.railway.app/puf';\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      const rawData = await response.json();\n      // console.debug('üîó Raw API data:', rawData);\n\n      // Format Wei values using Ethers.js (18 decimals)\n      const data = {\n        burnedAmount: formatWeiToToken(rawData.burnAmount),\n        treasuryAmount: formatWeiToToken(rawData.treasuryAmount),\n        royaltiesAmount: formatWeiToToken(rawData.creatorFeeAmount)\n      };\n\n      // console.debug('‚úÖ Formatted data:', data);\n\n      const calculatedTotalVolume = calculateTotalVolume(data.royaltiesAmount);\n      // console.debug(`üíπ Calculated Total Volume: ${formatNumber(calculatedTotalVolume)} WLD`);\n\n      setBurnedAmount(data.burnedAmount);\n      setTreasuryAmount(data.treasuryAmount);\n      setRoyaltiesAmount(data.royaltiesAmount);\n      setTotalVolume(calculatedTotalVolume);\n    } catch (error) {\n      console.error('‚ùå Tokenomics data error:', error);\n      console.log('üîÑ Fallback: Using mock data...');\n      const fallbackData = {\n        burnedAmount: mockData.burnedAmount,\n        treasuryAmount: mockData.treasuryAmount,\n        royaltiesAmount: mockData.royaltiesAmount\n      };\n      const fallbackTotalVolume = calculateTotalVolume(fallbackData.royaltiesAmount);\n      setBurnedAmount(fallbackData.burnedAmount);\n      setTreasuryAmount(fallbackData.treasuryAmount);\n      setRoyaltiesAmount(fallbackData.royaltiesAmount);\n      setTotalVolume(fallbackTotalVolume);\n    }\n  }, [formatWeiToToken, calculateTotalVolume, mockData]);\n  const fetchUserStats = useCallback(async () => {\n    try {\n      console.log('üë• User stats fetching from Supabase...');\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      // Get total users\n      const {\n        count: totalUsers,\n        error: totalError\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      });\n      if (totalError) throw totalError;\n\n      // Get daily users\n      const {\n        count: dailyUsers,\n        error: dailyError\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', today.toISOString());\n      if (dailyError) throw dailyError;\n\n      // Get weekly users\n      const {\n        count: weeklyUsers,\n        error: weeklyError\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', weekAgo.toISOString());\n      if (weeklyError) throw weeklyError;\n\n      // Get monthly users\n      const {\n        count: monthlyUsers,\n        error: monthlyError\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', monthAgo.toISOString());\n      if (monthlyError) throw monthlyError;\n      const stats = {\n        daily: dailyUsers || 0,\n        weekly: weeklyUsers || 0,\n        monthly: monthlyUsers || 0,\n        total: totalUsers || 0\n      };\n      setUserStats(stats);\n      console.log(`‚úÖ User stats: ${JSON.stringify(stats)}`);\n    } catch (error) {\n      console.error('‚ùå User stats error:', error);\n      setUserStats({\n        daily: 0,\n        weekly: 0,\n        monthly: 0,\n        total: 0\n      });\n    }\n  }, []);\n  const fetchTokenStats = useCallback(async () => {\n    try {\n      console.log('ü™ô Token stats fetching from Supabase...');\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      // Get total tokens\n      const {\n        count: totalTokens,\n        error: totalError\n      } = await supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      });\n      if (totalError) throw totalError;\n\n      // Get daily tokens\n      const {\n        count: dailyTokens,\n        error: dailyError\n      } = await supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', today.toISOString());\n      if (dailyError) throw dailyError;\n\n      // Get weekly tokens\n      const {\n        count: weeklyTokens,\n        error: weeklyError\n      } = await supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', weekAgo.toISOString());\n      if (weeklyError) throw weeklyError;\n\n      // Get monthly tokens\n      const {\n        count: monthlyTokens,\n        error: monthlyError\n      } = await supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', monthAgo.toISOString());\n      if (monthlyError) throw monthlyError;\n      const stats = {\n        daily: dailyTokens || 0,\n        weekly: weeklyTokens || 0,\n        monthly: monthlyTokens || 0,\n        total: totalTokens || 0\n      };\n      setTokenStats(stats);\n      console.log(`‚úÖ Token stats: ${JSON.stringify(stats)}`);\n    } catch (error) {\n      console.error('‚ùå Token stats error:', error);\n      setTokenStats({\n        daily: 0,\n        weekly: 0,\n        monthly: 0,\n        total: 0\n      });\n    }\n  }, []);\n  const getRangeStart = useCallback(r => {\n    const now = new Date();\n    if (r === '24h') {\n      return new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    }\n    if (r === '7d') {\n      return new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n    }\n    if (r === '30d') {\n      return new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n    }\n    return null; // all\n  }, []);\n\n  // Range-based queries\n  const fetchRangeUsers = useCallback(async r => {\n    const since = getRangeStart(r);\n    if (!since) {\n      // all\n      const {\n        count,\n        error\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      });\n      if (error) throw error;\n      setRangeUsers(count || 0);\n      return;\n    }\n    const {\n      count,\n      error\n    } = await supabase.from('users').select('*', {\n      count: 'exact',\n      head: true\n    }).gte('created_at', since.toISOString());\n    if (error) throw error;\n    setRangeUsers(count || 0);\n  }, [getRangeStart]);\n  const fetchRangeTokensAndCreators = useCallback(async r => {\n    const since = getRangeStart(r);\n    if (!since) {\n      const [{\n        count: tokensAll,\n        error: tokensErr\n      }, {\n        data: creatorsData,\n        error: creatorsErr\n      }] = await Promise.all([supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      }), supabase.from('tokens').select('creator_id').not('creator_id', 'is', null)]);\n      if (tokensErr) throw tokensErr;\n      if (creatorsErr) throw creatorsErr;\n      const uniqueCreatorIds = [...new Set((creatorsData || []).map(t => t.creator_id))];\n      setRangeTokens(tokensAll || 0);\n      setRangeCreators(uniqueCreatorIds.length);\n      return;\n    }\n    const [{\n      count: tokensCount,\n      error: tokensErr\n    }, {\n      data: creatorsData,\n      error: creatorsErr\n    }] = await Promise.all([supabase.from('tokens').select('*', {\n      count: 'exact',\n      head: true\n    }).gte('created_at', since.toISOString()), supabase.from('tokens').select('creator_id, created_at').gte('created_at', since.toISOString()).not('creator_id', 'is', null)]);\n    if (tokensErr) throw tokensErr;\n    if (creatorsErr) throw creatorsErr;\n    const uniqueCreatorIds = [...new Set((creatorsData || []).map(t => t.creator_id))];\n    setRangeTokens(tokensCount || 0);\n    setRangeCreators(uniqueCreatorIds.length);\n  }, [getRangeStart]);\n  useEffect(() => {\n    // fetch range-dependent stats when range changes\n    (async () => {\n      try {\n        await Promise.all([fetchRangeUsers(range), fetchRangeTokensAndCreators(range)]);\n      } catch (e) {\n        console.error('Range stats error', e);\n        setRangeUsers(0);\n        setRangeTokens(0);\n        setRangeCreators(0);\n      }\n    })();\n  }, [range, fetchRangeUsers, fetchRangeTokensAndCreators]);\n  const fetchUniqueCreators = useCallback(async () => {\n    try {\n      console.log('üé® Unique creators fetching from Supabase...');\n      const {\n        data,\n        error\n      } = await supabase.from('tokens').select('creator_id').not('creator_id', 'is', null);\n      if (error) throw error;\n\n      // Get unique creator IDs\n      const uniqueCreatorIds = [...new Set(data.map(token => token.creator_id))];\n      const creatorCount = uniqueCreatorIds.length;\n      setUniqueCreators(creatorCount);\n      console.log(`‚úÖ Unique creators: ${creatorCount}`);\n    } catch (error) {\n      console.error('‚ùå Unique creators error:', error);\n      setUniqueCreators(0);\n    }\n  }, []);\n  const loadInitialData = useCallback(async () => {\n    console.log('üìä Loading initial data...');\n    setLoading(true);\n\n    // fire price fetch independently so it can render ASAP\n    setPriceLoading(true);\n    fetchTokenPrice().finally(() => setPriceLoading(false));\n    try {\n      await Promise.all([fetchTotalSupply(), fetchTokenomicsData(), fetchUserStats(), fetchTokenStats(), fetchUniqueCreators(), fetchTokenCreatorAggregates()]);\n      setLastSync(new Date().toLocaleTimeString('tr-TR'));\n    } catch (error) {\n      console.error('‚ùå Data loading error:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchTotalSupply, fetchTokenPrice, fetchTokenomicsData, fetchUserStats, fetchTokenStats, fetchUniqueCreators, fetchTokenCreatorAggregates]);\n\n  // Initial load\n  useEffect(() => {\n    loadInitialData();\n  }, [loadInitialData]);\n\n  // Calculate percentages for display\n  const getBurnedPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(burnedAmount, totalSupply).toFixed(4)}%`;\n  };\n  const getTreasuryPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(treasuryAmount, totalSupply).toFixed(4)}%`;\n  };\n  const getRoyaltiesPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(royaltiesAmount, totalSupply).toFixed(4)}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        tokenPrice: tokenPrice,\n        priceChange24h: priceChange24h,\n        loading: priceLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        burnedAmount: burnedAmount,\n        treasuryAmount: treasuryAmount,\n        royaltiesAmount: royaltiesAmount,\n        totalVolume: totalVolume,\n        burnedPercentage: getBurnedPercentage(),\n        treasuryPercentage: getTreasuryPercentage(),\n        royaltiesPercentage: getRoyaltiesPercentage(),\n        loading: loading,\n        lastSync: lastSync,\n        userStats: userStats,\n        tokenStats: tokenStats,\n        uniqueCreators: uniqueCreators,\n        range: range,\n        rangeUsers: rangeUsers,\n        rangeTokens: rangeTokens,\n        rangeCreators: rangeCreators,\n        tokenCreatorAgg: tokenCreatorAgg,\n        onRangeChange: setRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$PUF data \\u2022 Last sync: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"lastSync\",\n            children: lastSync\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signature\",\n          children: [\"$PUFBoard by \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"creator\",\n            children: \"lambzerfaust.2702\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 516,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jUtbJ1caZBUK0kS8nLDkQFUPek8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","ethers","supabase","Header","Dashboard","jsxDEV","_jsxDEV","App","_s","tokenPrice","setTokenPrice","burnedAmount","setBurnedAmount","treasuryAmount","setTreasuryAmount","royaltiesAmount","setRoyaltiesAmount","totalVolume","setTotalVolume","priceChange24h","setPriceChange24h","lastSync","setLastSync","totalSupply","setTotalSupply","loading","setLoading","priceLoading","setPriceLoading","userStats","setUserStats","daily","weekly","monthly","total","tokenStats","setTokenStats","uniqueCreators","setUniqueCreators","range","setRange","rangeUsers","setRangeUsers","rangeTokens","setRangeTokens","rangeCreators","setRangeCreators","tokenCreatorAgg","setTokenCreatorAgg","tokens","creators","all","contractAddress","worldchainRPC","erc20ABI","mockData","lastUpdate","Date","formatWeiToToken","weiValue","etherValue","formatEther","parseFloat","error","console","getSinceHours","hours","now","fetchTokenCreatorAggregates","log","fetchWindow","since","tokensQuery","from","select","count","head","gte","toISOString","tokensCount","tokensErr","creatorsQuery","not","data","creatorsData","creatorsErr","uniqueCreatorIds","Set","map","r","creator_id","size","agg24h","agg7d","agg30d","aggAll","Promise","e","formatNumber","num","toFixed","toLocaleString","calculatePercentage","value","calculateTotalVolume","creatorRoyalty","volumeMultiplier","fetchTotalSupply","provider","JsonRpcProvider","contract","Contract","totalSupplyWei","totalSupplyTokens","toString","fetchTokenPrice","pairAddress","apiUrl","response","fetch","ok","Error","status","json","pairs","length","pair","price","priceUsd","isNaN","_pair$priceChange","priceChange","h24","fallbackPrice","fetchTokenomicsData","rawData","burnAmount","creatorFeeAmount","calculatedTotalVolume","fallbackData","fallbackTotalVolume","fetchUserStats","today","getFullYear","getMonth","getDate","weekAgo","getTime","monthAgo","totalUsers","totalError","dailyUsers","dailyError","weeklyUsers","weeklyError","monthlyUsers","monthlyError","stats","JSON","stringify","fetchTokenStats","totalTokens","dailyTokens","weeklyTokens","monthlyTokens","getRangeStart","fetchRangeUsers","fetchRangeTokensAndCreators","tokensAll","t","fetchUniqueCreators","token","creatorCount","loadInitialData","finally","toLocaleTimeString","getBurnedPercentage","getTreasuryPercentage","getRoyaltiesPercentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","burnedPercentage","treasuryPercentage","royaltiesPercentage","onRangeChange","id","_c","$RefreshReg$"],"sources":["C:/Users/musta/OneDrive/Masa√ºst√º/data/Checker-frontend-real/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { ethers } from 'ethers';\nimport { supabase } from './supabase';\nimport './App.css';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  // State management\n  const [tokenPrice, setTokenPrice] = useState('Loading...');\n  const [burnedAmount, setBurnedAmount] = useState(0);\n  const [treasuryAmount, setTreasuryAmount] = useState(0);\n  const [royaltiesAmount, setRoyaltiesAmount] = useState(0);\n  const [totalVolume, setTotalVolume] = useState(0);\n  const [priceChange24h, setPriceChange24h] = useState(null);\n  const [lastSync, setLastSync] = useState('Never');\n  const [totalSupply, setTotalSupply] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [priceLoading, setPriceLoading] = useState(true);\n\n  // User and token stats\n  const [userStats, setUserStats] = useState({\n    daily: 0,\n    weekly: 0,\n    monthly: 0,\n    total: 0\n  });\n  const [tokenStats, setTokenStats] = useState({\n    daily: 0,\n    weekly: 0,\n    monthly: 0,\n    total: 0\n  });\n  const [uniqueCreators, setUniqueCreators] = useState(0);\n  const [range, setRange] = useState('24h'); // all | 24h | 7d | 30d\n  const [rangeUsers, setRangeUsers] = useState(0);\n  const [rangeTokens, setRangeTokens] = useState(0);\n  const [rangeCreators, setRangeCreators] = useState(0);\n  const [tokenCreatorAgg, setTokenCreatorAgg] = useState({\n    '24h': { tokens: 0, creators: 0 },\n    '7d': { tokens: 0, creators: 0 },\n    '30d': { tokens: 0, creators: 0 },\n    all: { tokens: 0, creators: 0 }\n  });\n\n  // Configuration\n  const contractAddress = '0x1aE3498f1B417fe31BE544B04B711F27Ba437bd3';\n  const worldchainRPC = 'https://ancient-lingering-theorem.worldchain-mainnet.quiknode.pro/e675ad9beb96bbaacc8d48edfa4738642824c58e/';\n\n  // ERC20 ABI for totalSupply\n  const erc20ABI = useMemo(() => [\n    \"function totalSupply() view returns (uint256)\"\n  ], []);\n\n  // Mock data for fallback\n  const mockData = useMemo(() => ({\n    tokenPrice: 0.0234,\n    burnedAmount: 1250000,\n    treasuryAmount: 890000,\n    royaltiesAmount: 340000,\n    lastUpdate: new Date()\n  }), []);\n\n  // Utility functions\n  const formatWeiToToken = useCallback((weiValue) => {\n    try {\n      if (!weiValue || weiValue === '0') return 0;\n      const etherValue = ethers.formatEther(weiValue);\n      return parseFloat(etherValue);\n    } catch (error) {\n      console.error('Wei format error:', error, weiValue);\n      return 0;\n    }\n  }, []);\n\n  const getSinceHours = useCallback((hours) => {\n    return new Date(Date.now() - hours * 60 * 60 * 1000);\n  }, []);\n\n  // Exact aggregates for tokens and unique creators as per Supabase queries\n  const fetchTokenCreatorAggregates = useCallback(async () => {\n    try {\n      console.log('üìä Aggregates: tokens & unique creators (24h/7d/30d/All)');\n\n      const fetchWindow = async (since) => {\n        // tokens count\n        const tokensQuery = supabase\n          .from('tokens')\n          .select('*', { count: 'exact', head: true });\n        if (since) tokensQuery.gte('created_at', since.toISOString());\n        const { count: tokensCount, error: tokensErr } = await tokensQuery;\n        if (tokensErr) throw tokensErr;\n\n        // creators distinct count (client-side distinct)\n        const creatorsQuery = supabase\n          .from('tokens')\n          .select('creator_id')\n          .not('creator_id', 'is', null);\n        if (since) creatorsQuery.gte('created_at', since.toISOString());\n        const { data: creatorsData, error: creatorsErr } = await creatorsQuery;\n        if (creatorsErr) throw creatorsErr;\n        const uniqueCreatorIds = new Set((creatorsData || []).map(r => r.creator_id));\n\n        return { tokens: tokensCount || 0, creators: uniqueCreatorIds.size };\n      };\n\n      const [agg24h, agg7d, agg30d, aggAll] = await Promise.all([\n        fetchWindow(getSinceHours(24)),\n        fetchWindow(getSinceHours(168)),\n        fetchWindow(getSinceHours(720)),\n        fetchWindow(null)\n      ]);\n\n      setTokenCreatorAgg({ '24h': agg24h, '7d': agg7d, '30d': agg30d, all: aggAll });\n      console.log('‚úÖ Aggregates loaded:', { '24h': agg24h, '7d': agg7d, '30d': agg30d, all: aggAll });\n    } catch (e) {\n      console.error('‚ùå Aggregates error:', e);\n      setTokenCreatorAgg({ '24h': { tokens: 0, creators: 0 }, '7d': { tokens: 0, creators: 0 }, '30d': { tokens: 0, creators: 0 }, all: { tokens: 0, creators: 0 } });\n    }\n  }, [getSinceHours]);\n\n  const formatNumber = useCallback((num) => {\n    if (num >= 1000000) {\n      return (num / 1000000).toFixed(2) + 'M';\n    } else if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toLocaleString();\n  }, []);\n\n  const calculatePercentage = useCallback((value, total) => {\n    return (value / total) * 100;\n  }, []);\n\n  const calculateTotalVolume = useCallback((creatorRoyalty) => {\n    if (!creatorRoyalty || creatorRoyalty <= 0) return 0;\n    const volumeMultiplier = 0.02 * 0.35; // 2%'nin 35'i = 0.007\n    return creatorRoyalty / volumeMultiplier;\n  }, []);\n\n  // API functions\n  const fetchTotalSupply = useCallback(async () => {\n    try {\n      console.log('üî¢ Total Supply fetching from contract...');\n\n      const provider = new ethers.JsonRpcProvider(worldchainRPC);\n      const contract = new ethers.Contract(contractAddress, erc20ABI, provider);\n\n      const totalSupplyWei = await contract.totalSupply();\n      const totalSupplyTokens = formatWeiToToken(totalSupplyWei.toString());\n\n      setTotalSupply(totalSupplyTokens);\n      console.log(`‚úÖ Total Supply: ${formatNumber(totalSupplyTokens)} PUF`);\n\n    } catch (error) {\n      console.error('‚ùå Total Supply fetch error:', error);\n      setTotalSupply(1000000000); // 1B tokens fallback\n      console.log('üîÑ Fallback: Total Supply = 1B PUF (approximate)');\n    }\n  }, [contractAddress, worldchainRPC, erc20ABI, formatWeiToToken, formatNumber]);\n\n  const fetchTokenPrice = useCallback(async () => {\n    try {\n      console.log('üí∞ Token price fetching from DexScreener...');\n\n      const pairAddress = '0x1D3bdD97F3772EAbe2c039476805376e788374d8';\n      const apiUrl = `https://api.dexscreener.com/latest/dex/pairs/worldchain/${pairAddress}`;\n\n      const response = await fetch(apiUrl);\n\n      if (!response.ok) {\n        throw new Error(`DexScreener API error: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (data && data.pairs && data.pairs.length > 0) {\n        const pair = data.pairs[0];\n        const price = parseFloat(pair.priceUsd);\n\n        if (price && !isNaN(price)) {\n          console.log(`‚úÖ $PUF price: $${price}`);\n\n          const priceChange24h = pair.priceChange?.h24;\n          setTokenPrice(`$${price.toFixed(6)}`);\n          setPriceChange24h(priceChange24h);\n\n          // debug details (silenced)\n        } else {\n          throw new Error('Invalid price data');\n        }\n      } else {\n        throw new Error('Pair data not found');\n      }\n\n    } catch (error) {\n      console.error('‚ùå Token price error:', error);\n      console.log('üîÑ Fallback: Using mock data...');\n      const fallbackPrice = mockData.tokenPrice;\n      setTokenPrice(`$${fallbackPrice.toFixed(6)}`);\n      setPriceChange24h(null);\n\n      // Error styling would be handled in Header component\n    }\n  }, [mockData]);\n\n  const fetchTokenomicsData = useCallback(async () => {\n    try {\n      console.log('üìà Tokenomics data fetching...');\n\n      const apiUrl = 'https://puf-tracker-indexer-production.up.railway.app/puf';\n      const response = await fetch(apiUrl);\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n\n      const rawData = await response.json();\n      // console.debug('üîó Raw API data:', rawData);\n\n      // Format Wei values using Ethers.js (18 decimals)\n      const data = {\n        burnedAmount: formatWeiToToken(rawData.burnAmount),\n        treasuryAmount: formatWeiToToken(rawData.treasuryAmount),\n        royaltiesAmount: formatWeiToToken(rawData.creatorFeeAmount)\n      };\n\n      // console.debug('‚úÖ Formatted data:', data);\n\n      const calculatedTotalVolume = calculateTotalVolume(data.royaltiesAmount);\n      // console.debug(`üíπ Calculated Total Volume: ${formatNumber(calculatedTotalVolume)} WLD`);\n\n      setBurnedAmount(data.burnedAmount);\n      setTreasuryAmount(data.treasuryAmount);\n      setRoyaltiesAmount(data.royaltiesAmount);\n      setTotalVolume(calculatedTotalVolume);\n\n    } catch (error) {\n      console.error('‚ùå Tokenomics data error:', error);\n      console.log('üîÑ Fallback: Using mock data...');\n\n      const fallbackData = {\n        burnedAmount: mockData.burnedAmount,\n        treasuryAmount: mockData.treasuryAmount,\n        royaltiesAmount: mockData.royaltiesAmount\n      };\n\n      const fallbackTotalVolume = calculateTotalVolume(fallbackData.royaltiesAmount);\n\n      setBurnedAmount(fallbackData.burnedAmount);\n      setTreasuryAmount(fallbackData.treasuryAmount);\n      setRoyaltiesAmount(fallbackData.royaltiesAmount);\n      setTotalVolume(fallbackTotalVolume);\n    }\n  }, [formatWeiToToken, calculateTotalVolume, mockData]);\n\n  const fetchUserStats = useCallback(async () => {\n    try {\n      console.log('üë• User stats fetching from Supabase...');\n\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      // Get total users\n      const { count: totalUsers, error: totalError } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true });\n\n      if (totalError) throw totalError;\n\n      // Get daily users\n      const { count: dailyUsers, error: dailyError } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', today.toISOString());\n\n      if (dailyError) throw dailyError;\n\n      // Get weekly users\n      const { count: weeklyUsers, error: weeklyError } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', weekAgo.toISOString());\n\n      if (weeklyError) throw weeklyError;\n\n      // Get monthly users\n      const { count: monthlyUsers, error: monthlyError } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', monthAgo.toISOString());\n\n      if (monthlyError) throw monthlyError;\n\n      const stats = {\n        daily: dailyUsers || 0,\n        weekly: weeklyUsers || 0,\n        monthly: monthlyUsers || 0,\n        total: totalUsers || 0\n      };\n\n      setUserStats(stats);\n      console.log(`‚úÖ User stats: ${JSON.stringify(stats)}`);\n\n    } catch (error) {\n      console.error('‚ùå User stats error:', error);\n      setUserStats({ daily: 0, weekly: 0, monthly: 0, total: 0 });\n    }\n  }, []);\n\n  const fetchTokenStats = useCallback(async () => {\n    try {\n      console.log('ü™ô Token stats fetching from Supabase...');\n\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      // Get total tokens\n      const { count: totalTokens, error: totalError } = await supabase\n        .from('tokens')\n        .select('*', { count: 'exact', head: true });\n\n      if (totalError) throw totalError;\n\n      // Get daily tokens\n      const { count: dailyTokens, error: dailyError } = await supabase\n        .from('tokens')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', today.toISOString());\n\n      if (dailyError) throw dailyError;\n\n      // Get weekly tokens\n      const { count: weeklyTokens, error: weeklyError } = await supabase\n        .from('tokens')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', weekAgo.toISOString());\n\n      if (weeklyError) throw weeklyError;\n\n      // Get monthly tokens\n      const { count: monthlyTokens, error: monthlyError } = await supabase\n        .from('tokens')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', monthAgo.toISOString());\n\n      if (monthlyError) throw monthlyError;\n\n      const stats = {\n        daily: dailyTokens || 0,\n        weekly: weeklyTokens || 0,\n        monthly: monthlyTokens || 0,\n        total: totalTokens || 0\n      };\n\n      setTokenStats(stats);\n      console.log(`‚úÖ Token stats: ${JSON.stringify(stats)}`);\n\n    } catch (error) {\n      console.error('‚ùå Token stats error:', error);\n      setTokenStats({ daily: 0, weekly: 0, monthly: 0, total: 0 });\n    }\n  }, []);\n\n  const getRangeStart = useCallback((r) => {\n    const now = new Date();\n    if (r === '24h') {\n      return new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    }\n    if (r === '7d') {\n      return new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n    }\n    if (r === '30d') {\n      return new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n    }\n    return null; // all\n  }, []);\n\n  // Range-based queries\n  const fetchRangeUsers = useCallback(async (r) => {\n    const since = getRangeStart(r);\n    if (!since) {\n      // all\n      const { count, error } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true });\n      if (error) throw error;\n      setRangeUsers(count || 0);\n      return;\n    }\n    const { count, error } = await supabase\n      .from('users')\n      .select('*', { count: 'exact', head: true })\n      .gte('created_at', since.toISOString());\n    if (error) throw error;\n    setRangeUsers(count || 0);\n  }, [getRangeStart]);\n\n  const fetchRangeTokensAndCreators = useCallback(async (r) => {\n    const since = getRangeStart(r);\n    if (!since) {\n      const [{ count: tokensAll, error: tokensErr }, { data: creatorsData, error: creatorsErr }] = await Promise.all([\n        supabase.from('tokens').select('*', { count: 'exact', head: true }),\n        supabase.from('tokens').select('creator_id').not('creator_id', 'is', null)\n      ]);\n      if (tokensErr) throw tokensErr;\n      if (creatorsErr) throw creatorsErr;\n      const uniqueCreatorIds = [...new Set((creatorsData || []).map(t => t.creator_id))];\n      setRangeTokens(tokensAll || 0);\n      setRangeCreators(uniqueCreatorIds.length);\n      return;\n    }\n    const [{ count: tokensCount, error: tokensErr }, { data: creatorsData, error: creatorsErr }] = await Promise.all([\n      supabase.from('tokens').select('*', { count: 'exact', head: true }).gte('created_at', since.toISOString()),\n      supabase.from('tokens').select('creator_id, created_at').gte('created_at', since.toISOString()).not('creator_id', 'is', null)\n    ]);\n    if (tokensErr) throw tokensErr;\n    if (creatorsErr) throw creatorsErr;\n    const uniqueCreatorIds = [...new Set((creatorsData || []).map(t => t.creator_id))];\n    setRangeTokens(tokensCount || 0);\n    setRangeCreators(uniqueCreatorIds.length);\n  }, [getRangeStart]);\n\n  useEffect(() => {\n    // fetch range-dependent stats when range changes\n    (async () => {\n      try {\n        await Promise.all([\n          fetchRangeUsers(range),\n          fetchRangeTokensAndCreators(range)\n        ]);\n      } catch (e) {\n        console.error('Range stats error', e);\n        setRangeUsers(0);\n        setRangeTokens(0);\n        setRangeCreators(0);\n      }\n    })();\n  }, [range, fetchRangeUsers, fetchRangeTokensAndCreators]);\n\n  const fetchUniqueCreators = useCallback(async () => {\n    try {\n      console.log('üé® Unique creators fetching from Supabase...');\n\n      const { data, error } = await supabase\n        .from('tokens')\n        .select('creator_id')\n        .not('creator_id', 'is', null);\n\n      if (error) throw error;\n\n      // Get unique creator IDs\n      const uniqueCreatorIds = [...new Set(data.map(token => token.creator_id))];\n      const creatorCount = uniqueCreatorIds.length;\n\n      setUniqueCreators(creatorCount);\n      console.log(`‚úÖ Unique creators: ${creatorCount}`);\n\n    } catch (error) {\n      console.error('‚ùå Unique creators error:', error);\n      setUniqueCreators(0);\n    }\n  }, []);\n\n  const loadInitialData = useCallback(async () => {\n    console.log('üìä Loading initial data...');\n    setLoading(true);\n\n    // fire price fetch independently so it can render ASAP\n    setPriceLoading(true);\n    fetchTokenPrice().finally(() => setPriceLoading(false));\n\n    try {\n      await Promise.all([\n        fetchTotalSupply(),\n        fetchTokenomicsData(),\n        fetchUserStats(),\n        fetchTokenStats(),\n        fetchUniqueCreators(),\n        fetchTokenCreatorAggregates()\n      ]);\n      setLastSync(new Date().toLocaleTimeString('tr-TR'));\n    } catch (error) {\n      console.error('‚ùå Data loading error:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchTotalSupply, fetchTokenPrice, fetchTokenomicsData, fetchUserStats, fetchTokenStats, fetchUniqueCreators, fetchTokenCreatorAggregates]);\n\n  // Initial load\n  useEffect(() => {\n    loadInitialData();\n  }, [loadInitialData]);\n\n  // Calculate percentages for display\n  const getBurnedPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(burnedAmount, totalSupply).toFixed(4)}%`;\n  };\n\n  const getTreasuryPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(treasuryAmount, totalSupply).toFixed(4)}%`;\n  };\n\n  const getRoyaltiesPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(royaltiesAmount, totalSupply).toFixed(4)}%`;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header\n          tokenPrice={tokenPrice}\n          priceChange24h={priceChange24h}\n          loading={priceLoading}\n        />\n        <Dashboard\n          burnedAmount={burnedAmount}\n          treasuryAmount={treasuryAmount}\n          royaltiesAmount={royaltiesAmount}\n          totalVolume={totalVolume}\n          burnedPercentage={getBurnedPercentage()}\n          treasuryPercentage={getTreasuryPercentage()}\n          royaltiesPercentage={getRoyaltiesPercentage()}\n          loading={loading}\n          lastSync={lastSync}\n          userStats={userStats}\n          tokenStats={tokenStats}\n          uniqueCreators={uniqueCreators}\n          range={range}\n          rangeUsers={rangeUsers}\n          rangeTokens={rangeTokens}\n          rangeCreators={rangeCreators}\n          tokenCreatorAgg={tokenCreatorAgg}\n          onRangeChange={setRange}\n        />\n        <footer className=\"footer\">\n          <p>$PUF data ‚Ä¢ Last sync: <span id=\"lastSync\">{lastSync}</span></p>\n          <p className=\"signature\">$PUFBoard by <span className=\"creator\">lambzerfaust.2702</span></p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}