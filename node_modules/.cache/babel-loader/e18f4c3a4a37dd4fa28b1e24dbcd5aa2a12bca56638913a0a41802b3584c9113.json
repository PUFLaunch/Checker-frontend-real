{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musta\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\data\\\\Checker-frontend-real\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { ethers } from 'ethers';\nimport { supabase } from './supabase';\nimport './App.css';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [tokenPrice, setTokenPrice] = useState('Loading...');\n  const [burnedAmount, setBurnedAmount] = useState(0);\n  const [treasuryAmount, setTreasuryAmount] = useState(0);\n  const [royaltiesAmount, setRoyaltiesAmount] = useState(0);\n  const [totalVolume, setTotalVolume] = useState(0);\n  const [priceChange24h, setPriceChange24h] = useState(null);\n  const [lastSync, setLastSync] = useState('Never');\n  const [totalSupply, setTotalSupply] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [priceLoading, setPriceLoading] = useState(true);\n\n  // User and token stats\n  const [userStats, setUserStats] = useState({\n    daily: 0,\n    weekly: 0,\n    monthly: 0,\n    total: 0\n  });\n  const [tokenStats, setTokenStats] = useState({\n    daily: 0,\n    weekly: 0,\n    monthly: 0,\n    total: 0\n  });\n  const [uniqueCreators, setUniqueCreators] = useState(0);\n  const [range, setRange] = useState('24h'); // all | 24h | 7d | 30d\n  const [rangeUsers, setRangeUsers] = useState(0);\n  const [rangeTokens, setRangeTokens] = useState(0);\n  const [rangeCreators, setRangeCreators] = useState(0);\n\n  // Configuration\n  const contractAddress = '0x1aE3498f1B417fe31BE544B04B711F27Ba437bd3';\n  const worldchainRPC = 'https://ancient-lingering-theorem.worldchain-mainnet.quiknode.pro/e675ad9beb96bbaacc8d48edfa4738642824c58e/';\n\n  // ERC20 ABI for totalSupply\n  const erc20ABI = useMemo(() => [\"function totalSupply() view returns (uint256)\"], []);\n\n  // Mock data for fallback\n  const mockData = useMemo(() => ({\n    tokenPrice: 0.0234,\n    burnedAmount: 1250000,\n    treasuryAmount: 890000,\n    royaltiesAmount: 340000,\n    lastUpdate: new Date()\n  }), []);\n\n  // Utility functions\n  const formatWeiToToken = useCallback(weiValue => {\n    try {\n      if (!weiValue || weiValue === '0') return 0;\n      const etherValue = ethers.formatEther(weiValue);\n      return parseFloat(etherValue);\n    } catch (error) {\n      console.error('Wei format error:', error, weiValue);\n      return 0;\n    }\n  }, []);\n  const formatNumber = useCallback(num => {\n    if (num >= 1000000) {\n      return (num / 1000000).toFixed(2) + 'M';\n    } else if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toLocaleString();\n  }, []);\n  const calculatePercentage = useCallback((value, total) => {\n    return value / total * 100;\n  }, []);\n  const calculateTotalVolume = useCallback(creatorRoyalty => {\n    if (!creatorRoyalty || creatorRoyalty <= 0) return 0;\n    const volumeMultiplier = 0.02 * 0.35; // 2%'nin 35'i = 0.007\n    return creatorRoyalty / volumeMultiplier;\n  }, []);\n\n  // API functions\n  const fetchTotalSupply = useCallback(async () => {\n    try {\n      console.log('🔢 Total Supply fetching from contract...');\n      const provider = new ethers.JsonRpcProvider(worldchainRPC);\n      const contract = new ethers.Contract(contractAddress, erc20ABI, provider);\n      const totalSupplyWei = await contract.totalSupply();\n      const totalSupplyTokens = formatWeiToToken(totalSupplyWei.toString());\n      setTotalSupply(totalSupplyTokens);\n      console.log(`✅ Total Supply: ${formatNumber(totalSupplyTokens)} PUF`);\n    } catch (error) {\n      console.error('❌ Total Supply fetch error:', error);\n      setTotalSupply(1000000000); // 1B tokens fallback\n      console.log('🔄 Fallback: Total Supply = 1B PUF (approximate)');\n    }\n  }, [contractAddress, worldchainRPC, erc20ABI, formatWeiToToken, formatNumber]);\n  const fetchTokenPrice = useCallback(async () => {\n    try {\n      console.log('💰 Token price fetching from DexScreener...');\n      const pairAddress = '0x1D3bdD97F3772EAbe2c039476805376e788374d8';\n      const apiUrl = `https://api.dexscreener.com/latest/dex/pairs/worldchain/${pairAddress}`;\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`DexScreener API error: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data && data.pairs && data.pairs.length > 0) {\n        const pair = data.pairs[0];\n        const price = parseFloat(pair.priceUsd);\n        if (price && !isNaN(price)) {\n          var _pair$priceChange;\n          console.log(`✅ $PUF price: $${price}`);\n          const priceChange24h = (_pair$priceChange = pair.priceChange) === null || _pair$priceChange === void 0 ? void 0 : _pair$priceChange.h24;\n          setTokenPrice(`$${price.toFixed(6)}`);\n          setPriceChange24h(priceChange24h);\n\n          // debug details (silenced)\n        } else {\n          throw new Error('Invalid price data');\n        }\n      } else {\n        throw new Error('Pair data not found');\n      }\n    } catch (error) {\n      console.error('❌ Token price error:', error);\n      console.log('🔄 Fallback: Using mock data...');\n      const fallbackPrice = mockData.tokenPrice;\n      setTokenPrice(`$${fallbackPrice.toFixed(6)}`);\n      setPriceChange24h(null);\n\n      // Error styling would be handled in Header component\n    }\n  }, [mockData]);\n  const fetchTokenomicsData = useCallback(async () => {\n    try {\n      console.log('📈 Tokenomics data fetching...');\n      const apiUrl = 'https://puf-tracker-indexer-production.up.railway.app/puf';\n      const response = await fetch(apiUrl);\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      const rawData = await response.json();\n      // console.debug('🔗 Raw API data:', rawData);\n\n      // Format Wei values using Ethers.js (18 decimals)\n      const data = {\n        burnedAmount: formatWeiToToken(rawData.burnAmount),\n        treasuryAmount: formatWeiToToken(rawData.treasuryAmount),\n        royaltiesAmount: formatWeiToToken(rawData.creatorFeeAmount)\n      };\n\n      // console.debug('✅ Formatted data:', data);\n\n      const calculatedTotalVolume = calculateTotalVolume(data.royaltiesAmount);\n      // console.debug(`💹 Calculated Total Volume: ${formatNumber(calculatedTotalVolume)} WLD`);\n\n      setBurnedAmount(data.burnedAmount);\n      setTreasuryAmount(data.treasuryAmount);\n      setRoyaltiesAmount(data.royaltiesAmount);\n      setTotalVolume(calculatedTotalVolume);\n    } catch (error) {\n      console.error('❌ Tokenomics data error:', error);\n      console.log('🔄 Fallback: Using mock data...');\n      const fallbackData = {\n        burnedAmount: mockData.burnedAmount,\n        treasuryAmount: mockData.treasuryAmount,\n        royaltiesAmount: mockData.royaltiesAmount\n      };\n      const fallbackTotalVolume = calculateTotalVolume(fallbackData.royaltiesAmount);\n      setBurnedAmount(fallbackData.burnedAmount);\n      setTreasuryAmount(fallbackData.treasuryAmount);\n      setRoyaltiesAmount(fallbackData.royaltiesAmount);\n      setTotalVolume(fallbackTotalVolume);\n    }\n  }, [formatWeiToToken, calculateTotalVolume, mockData]);\n  const fetchUserStats = useCallback(async () => {\n    try {\n      console.log('👥 User stats fetching from Supabase...');\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      // Get total users\n      const {\n        count: totalUsers,\n        error: totalError\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      });\n      if (totalError) throw totalError;\n\n      // Get daily users\n      const {\n        count: dailyUsers,\n        error: dailyError\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', today.toISOString());\n      if (dailyError) throw dailyError;\n\n      // Get weekly users\n      const {\n        count: weeklyUsers,\n        error: weeklyError\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', weekAgo.toISOString());\n      if (weeklyError) throw weeklyError;\n\n      // Get monthly users\n      const {\n        count: monthlyUsers,\n        error: monthlyError\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', monthAgo.toISOString());\n      if (monthlyError) throw monthlyError;\n      const stats = {\n        daily: dailyUsers || 0,\n        weekly: weeklyUsers || 0,\n        monthly: monthlyUsers || 0,\n        total: totalUsers || 0\n      };\n      setUserStats(stats);\n      console.log(`✅ User stats: ${JSON.stringify(stats)}`);\n    } catch (error) {\n      console.error('❌ User stats error:', error);\n      setUserStats({\n        daily: 0,\n        weekly: 0,\n        monthly: 0,\n        total: 0\n      });\n    }\n  }, []);\n  const fetchTokenStats = useCallback(async () => {\n    try {\n      console.log('🪙 Token stats fetching from Supabase...');\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      // Get total tokens\n      const {\n        count: totalTokens,\n        error: totalError\n      } = await supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      });\n      if (totalError) throw totalError;\n\n      // Get daily tokens\n      const {\n        count: dailyTokens,\n        error: dailyError\n      } = await supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', today.toISOString());\n      if (dailyError) throw dailyError;\n\n      // Get weekly tokens\n      const {\n        count: weeklyTokens,\n        error: weeklyError\n      } = await supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', weekAgo.toISOString());\n      if (weeklyError) throw weeklyError;\n\n      // Get monthly tokens\n      const {\n        count: monthlyTokens,\n        error: monthlyError\n      } = await supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      }).gte('created_at', monthAgo.toISOString());\n      if (monthlyError) throw monthlyError;\n      const stats = {\n        daily: dailyTokens || 0,\n        weekly: weeklyTokens || 0,\n        monthly: monthlyTokens || 0,\n        total: totalTokens || 0\n      };\n      setTokenStats(stats);\n      console.log(`✅ Token stats: ${JSON.stringify(stats)}`);\n    } catch (error) {\n      console.error('❌ Token stats error:', error);\n      setTokenStats({\n        daily: 0,\n        weekly: 0,\n        monthly: 0,\n        total: 0\n      });\n    }\n  }, []);\n  const getRangeStart = useCallback(r => {\n    const now = new Date();\n    if (r === '24h') {\n      return new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    }\n    if (r === '7d') {\n      return new Date(now.getTime() - 168 * 60 * 60 * 1000); // 7 days = 168 hours\n    }\n    if (r === '30d') {\n      return new Date(now.getTime() - 720 * 60 * 60 * 1000); // 30 days = 720 hours\n    }\n    return null; // all\n  }, []);\n\n  // Range-based queries\n  const fetchRangeUsers = useCallback(async r => {\n    const since = getRangeStart(r);\n    if (!since) {\n      // all\n      const {\n        count,\n        error\n      } = await supabase.from('users').select('*', {\n        count: 'exact',\n        head: true\n      });\n      if (error) throw error;\n      setRangeUsers(count || 0);\n      return;\n    }\n    const {\n      count,\n      error\n    } = await supabase.from('users').select('*', {\n      count: 'exact',\n      head: true\n    }).gte('created_at', since.toISOString());\n    if (error) throw error;\n    setRangeUsers(count || 0);\n  }, [getRangeStart]);\n  const fetchRangeTokensAndCreators = useCallback(async r => {\n    const since = getRangeStart(r);\n    if (!since) {\n      const [{\n        count: tokensAll,\n        error: tokensErr\n      }, {\n        data: creatorsData,\n        error: creatorsErr\n      }] = await Promise.all([supabase.from('tokens').select('*', {\n        count: 'exact',\n        head: true\n      }), supabase.from('tokens').select('creator_id').not('creator_id', 'is', null)]);\n      if (tokensErr) throw tokensErr;\n      if (creatorsErr) throw creatorsErr;\n      const uniqueCreatorIds = [...new Set((creatorsData || []).map(t => t.creator_id))];\n      setRangeTokens(tokensAll || 0);\n      setRangeCreators(uniqueCreatorIds.length);\n      return;\n    }\n    const [{\n      count: tokensCount,\n      error: tokensErr\n    }, {\n      data: creatorsData,\n      error: creatorsErr\n    }] = await Promise.all([supabase.from('tokens').select('*', {\n      count: 'exact',\n      head: true\n    }).gte('created_at', since.toISOString()), supabase.from('tokens').select('creator_id, created_at').gte('created_at', since.toISOString()).not('creator_id', 'is', null)]);\n    if (tokensErr) throw tokensErr;\n    if (creatorsErr) throw creatorsErr;\n    const uniqueCreatorIds = [...new Set((creatorsData || []).map(t => t.creator_id))];\n    setRangeTokens(tokensCount || 0);\n    setRangeCreators(uniqueCreatorIds.length);\n  }, [getRangeStart]);\n  useEffect(() => {\n    // fetch range-dependent stats when range changes\n    (async () => {\n      try {\n        await Promise.all([fetchRangeUsers(range), fetchRangeTokensAndCreators(range)]);\n      } catch (e) {\n        console.error('Range stats error', e);\n        setRangeUsers(0);\n        setRangeTokens(0);\n        setRangeCreators(0);\n      }\n    })();\n  }, [range, fetchRangeUsers, fetchRangeTokensAndCreators]);\n  const fetchUniqueCreators = useCallback(async () => {\n    try {\n      console.log('🎨 Unique creators fetching from Supabase...');\n      const {\n        data,\n        error\n      } = await supabase.from('tokens').select('creator_id').not('creator_id', 'is', null);\n      if (error) throw error;\n\n      // Get unique creator IDs\n      const uniqueCreatorIds = [...new Set(data.map(token => token.creator_id))];\n      const creatorCount = uniqueCreatorIds.length;\n      setUniqueCreators(creatorCount);\n      console.log(`✅ Unique creators: ${creatorCount}`);\n    } catch (error) {\n      console.error('❌ Unique creators error:', error);\n      setUniqueCreators(0);\n    }\n  }, []);\n  const loadInitialData = useCallback(async () => {\n    console.log('📊 Loading initial data...');\n    setLoading(true);\n\n    // fire price fetch independently so it can render ASAP\n    setPriceLoading(true);\n    fetchTokenPrice().finally(() => setPriceLoading(false));\n    try {\n      await Promise.all([fetchTotalSupply(), fetchTokenomicsData(), fetchUserStats(), fetchTokenStats(), fetchUniqueCreators()]);\n      setLastSync(new Date().toLocaleTimeString('tr-TR'));\n    } catch (error) {\n      console.error('❌ Data loading error:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchTotalSupply, fetchTokenPrice, fetchTokenomicsData, fetchUserStats, fetchTokenStats, fetchUniqueCreators]);\n\n  // Initial load\n  useEffect(() => {\n    loadInitialData();\n  }, [loadInitialData]);\n\n  // Calculate percentages for display\n  const getBurnedPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(burnedAmount, totalSupply).toFixed(4)}%`;\n  };\n  const getTreasuryPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(treasuryAmount, totalSupply).toFixed(4)}%`;\n  };\n  const getRoyaltiesPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(royaltiesAmount, totalSupply).toFixed(4)}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        tokenPrice: tokenPrice,\n        priceChange24h: priceChange24h,\n        loading: priceLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n        burnedAmount: burnedAmount,\n        treasuryAmount: treasuryAmount,\n        royaltiesAmount: royaltiesAmount,\n        totalVolume: totalVolume,\n        burnedPercentage: getBurnedPercentage(),\n        treasuryPercentage: getTreasuryPercentage(),\n        royaltiesPercentage: getRoyaltiesPercentage(),\n        loading: loading,\n        lastSync: lastSync,\n        userStats: userStats,\n        tokenStats: tokenStats,\n        uniqueCreators: uniqueCreators,\n        range: range,\n        rangeUsers: rangeUsers,\n        rangeTokens: rangeTokens,\n        rangeCreators: rangeCreators,\n        onRangeChange: setRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$PUF data \\u2022 Last sync: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"lastSync\",\n            children: lastSync\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signature\",\n          children: [\"$PUFBoard by \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"creator\",\n            children: \"lambzerfaust.2702\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 463,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hrjvglKlGmjbWwgBmJThZ/DlKiM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","ethers","supabase","Header","Dashboard","jsxDEV","_jsxDEV","App","_s","tokenPrice","setTokenPrice","burnedAmount","setBurnedAmount","treasuryAmount","setTreasuryAmount","royaltiesAmount","setRoyaltiesAmount","totalVolume","setTotalVolume","priceChange24h","setPriceChange24h","lastSync","setLastSync","totalSupply","setTotalSupply","loading","setLoading","priceLoading","setPriceLoading","userStats","setUserStats","daily","weekly","monthly","total","tokenStats","setTokenStats","uniqueCreators","setUniqueCreators","range","setRange","rangeUsers","setRangeUsers","rangeTokens","setRangeTokens","rangeCreators","setRangeCreators","contractAddress","worldchainRPC","erc20ABI","mockData","lastUpdate","Date","formatWeiToToken","weiValue","etherValue","formatEther","parseFloat","error","console","formatNumber","num","toFixed","toLocaleString","calculatePercentage","value","calculateTotalVolume","creatorRoyalty","volumeMultiplier","fetchTotalSupply","log","provider","JsonRpcProvider","contract","Contract","totalSupplyWei","totalSupplyTokens","toString","fetchTokenPrice","pairAddress","apiUrl","response","fetch","ok","Error","status","data","json","pairs","length","pair","price","priceUsd","isNaN","_pair$priceChange","priceChange","h24","fallbackPrice","fetchTokenomicsData","rawData","burnAmount","creatorFeeAmount","calculatedTotalVolume","fallbackData","fallbackTotalVolume","fetchUserStats","now","today","getFullYear","getMonth","getDate","weekAgo","getTime","monthAgo","count","totalUsers","totalError","from","select","head","dailyUsers","dailyError","gte","toISOString","weeklyUsers","weeklyError","monthlyUsers","monthlyError","stats","JSON","stringify","fetchTokenStats","totalTokens","dailyTokens","weeklyTokens","monthlyTokens","getRangeStart","r","fetchRangeUsers","since","fetchRangeTokensAndCreators","tokensAll","tokensErr","creatorsData","creatorsErr","Promise","all","not","uniqueCreatorIds","Set","map","t","creator_id","tokensCount","e","fetchUniqueCreators","token","creatorCount","loadInitialData","finally","toLocaleTimeString","getBurnedPercentage","getTreasuryPercentage","getRoyaltiesPercentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","burnedPercentage","treasuryPercentage","royaltiesPercentage","onRangeChange","id","_c","$RefreshReg$"],"sources":["C:/Users/musta/OneDrive/Masaüstü/data/Checker-frontend-real/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { ethers } from 'ethers';\nimport { supabase } from './supabase';\nimport './App.css';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  // State management\n  const [tokenPrice, setTokenPrice] = useState('Loading...');\n  const [burnedAmount, setBurnedAmount] = useState(0);\n  const [treasuryAmount, setTreasuryAmount] = useState(0);\n  const [royaltiesAmount, setRoyaltiesAmount] = useState(0);\n  const [totalVolume, setTotalVolume] = useState(0);\n  const [priceChange24h, setPriceChange24h] = useState(null);\n  const [lastSync, setLastSync] = useState('Never');\n  const [totalSupply, setTotalSupply] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [priceLoading, setPriceLoading] = useState(true);\n\n  // User and token stats\n  const [userStats, setUserStats] = useState({\n    daily: 0,\n    weekly: 0,\n    monthly: 0,\n    total: 0\n  });\n  const [tokenStats, setTokenStats] = useState({\n    daily: 0,\n    weekly: 0,\n    monthly: 0,\n    total: 0\n  });\n  const [uniqueCreators, setUniqueCreators] = useState(0);\n  const [range, setRange] = useState('24h'); // all | 24h | 7d | 30d\n  const [rangeUsers, setRangeUsers] = useState(0);\n  const [rangeTokens, setRangeTokens] = useState(0);\n  const [rangeCreators, setRangeCreators] = useState(0);\n\n  // Configuration\n  const contractAddress = '0x1aE3498f1B417fe31BE544B04B711F27Ba437bd3';\n  const worldchainRPC = 'https://ancient-lingering-theorem.worldchain-mainnet.quiknode.pro/e675ad9beb96bbaacc8d48edfa4738642824c58e/';\n\n  // ERC20 ABI for totalSupply\n  const erc20ABI = useMemo(() => [\n    \"function totalSupply() view returns (uint256)\"\n  ], []);\n\n  // Mock data for fallback\n  const mockData = useMemo(() => ({\n    tokenPrice: 0.0234,\n    burnedAmount: 1250000,\n    treasuryAmount: 890000,\n    royaltiesAmount: 340000,\n    lastUpdate: new Date()\n  }), []);\n\n  // Utility functions\n  const formatWeiToToken = useCallback((weiValue) => {\n    try {\n      if (!weiValue || weiValue === '0') return 0;\n      const etherValue = ethers.formatEther(weiValue);\n      return parseFloat(etherValue);\n    } catch (error) {\n      console.error('Wei format error:', error, weiValue);\n      return 0;\n    }\n  }, []);\n\n  const formatNumber = useCallback((num) => {\n    if (num >= 1000000) {\n      return (num / 1000000).toFixed(2) + 'M';\n    } else if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toLocaleString();\n  }, []);\n\n  const calculatePercentage = useCallback((value, total) => {\n    return (value / total) * 100;\n  }, []);\n\n  const calculateTotalVolume = useCallback((creatorRoyalty) => {\n    if (!creatorRoyalty || creatorRoyalty <= 0) return 0;\n    const volumeMultiplier = 0.02 * 0.35; // 2%'nin 35'i = 0.007\n    return creatorRoyalty / volumeMultiplier;\n  }, []);\n\n  // API functions\n  const fetchTotalSupply = useCallback(async () => {\n    try {\n      console.log('🔢 Total Supply fetching from contract...');\n\n      const provider = new ethers.JsonRpcProvider(worldchainRPC);\n      const contract = new ethers.Contract(contractAddress, erc20ABI, provider);\n\n      const totalSupplyWei = await contract.totalSupply();\n      const totalSupplyTokens = formatWeiToToken(totalSupplyWei.toString());\n\n      setTotalSupply(totalSupplyTokens);\n      console.log(`✅ Total Supply: ${formatNumber(totalSupplyTokens)} PUF`);\n\n    } catch (error) {\n      console.error('❌ Total Supply fetch error:', error);\n      setTotalSupply(1000000000); // 1B tokens fallback\n      console.log('🔄 Fallback: Total Supply = 1B PUF (approximate)');\n    }\n  }, [contractAddress, worldchainRPC, erc20ABI, formatWeiToToken, formatNumber]);\n\n  const fetchTokenPrice = useCallback(async () => {\n    try {\n      console.log('💰 Token price fetching from DexScreener...');\n\n      const pairAddress = '0x1D3bdD97F3772EAbe2c039476805376e788374d8';\n      const apiUrl = `https://api.dexscreener.com/latest/dex/pairs/worldchain/${pairAddress}`;\n\n      const response = await fetch(apiUrl);\n\n      if (!response.ok) {\n        throw new Error(`DexScreener API error: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (data && data.pairs && data.pairs.length > 0) {\n        const pair = data.pairs[0];\n        const price = parseFloat(pair.priceUsd);\n\n        if (price && !isNaN(price)) {\n          console.log(`✅ $PUF price: $${price}`);\n\n          const priceChange24h = pair.priceChange?.h24;\n          setTokenPrice(`$${price.toFixed(6)}`);\n          setPriceChange24h(priceChange24h);\n\n          // debug details (silenced)\n        } else {\n          throw new Error('Invalid price data');\n        }\n      } else {\n        throw new Error('Pair data not found');\n      }\n\n    } catch (error) {\n      console.error('❌ Token price error:', error);\n      console.log('🔄 Fallback: Using mock data...');\n      const fallbackPrice = mockData.tokenPrice;\n      setTokenPrice(`$${fallbackPrice.toFixed(6)}`);\n      setPriceChange24h(null);\n\n      // Error styling would be handled in Header component\n    }\n  }, [mockData]);\n\n  const fetchTokenomicsData = useCallback(async () => {\n    try {\n      console.log('📈 Tokenomics data fetching...');\n\n      const apiUrl = 'https://puf-tracker-indexer-production.up.railway.app/puf';\n      const response = await fetch(apiUrl);\n\n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n\n      const rawData = await response.json();\n      // console.debug('🔗 Raw API data:', rawData);\n\n      // Format Wei values using Ethers.js (18 decimals)\n      const data = {\n        burnedAmount: formatWeiToToken(rawData.burnAmount),\n        treasuryAmount: formatWeiToToken(rawData.treasuryAmount),\n        royaltiesAmount: formatWeiToToken(rawData.creatorFeeAmount)\n      };\n\n      // console.debug('✅ Formatted data:', data);\n\n      const calculatedTotalVolume = calculateTotalVolume(data.royaltiesAmount);\n      // console.debug(`💹 Calculated Total Volume: ${formatNumber(calculatedTotalVolume)} WLD`);\n\n      setBurnedAmount(data.burnedAmount);\n      setTreasuryAmount(data.treasuryAmount);\n      setRoyaltiesAmount(data.royaltiesAmount);\n      setTotalVolume(calculatedTotalVolume);\n\n    } catch (error) {\n      console.error('❌ Tokenomics data error:', error);\n      console.log('🔄 Fallback: Using mock data...');\n\n      const fallbackData = {\n        burnedAmount: mockData.burnedAmount,\n        treasuryAmount: mockData.treasuryAmount,\n        royaltiesAmount: mockData.royaltiesAmount\n      };\n\n      const fallbackTotalVolume = calculateTotalVolume(fallbackData.royaltiesAmount);\n\n      setBurnedAmount(fallbackData.burnedAmount);\n      setTreasuryAmount(fallbackData.treasuryAmount);\n      setRoyaltiesAmount(fallbackData.royaltiesAmount);\n      setTotalVolume(fallbackTotalVolume);\n    }\n  }, [formatWeiToToken, calculateTotalVolume, mockData]);\n\n  const fetchUserStats = useCallback(async () => {\n    try {\n      console.log('👥 User stats fetching from Supabase...');\n\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      // Get total users\n      const { count: totalUsers, error: totalError } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true });\n\n      if (totalError) throw totalError;\n\n      // Get daily users\n      const { count: dailyUsers, error: dailyError } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', today.toISOString());\n\n      if (dailyError) throw dailyError;\n\n      // Get weekly users\n      const { count: weeklyUsers, error: weeklyError } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', weekAgo.toISOString());\n\n      if (weeklyError) throw weeklyError;\n\n      // Get monthly users\n      const { count: monthlyUsers, error: monthlyError } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', monthAgo.toISOString());\n\n      if (monthlyError) throw monthlyError;\n\n      const stats = {\n        daily: dailyUsers || 0,\n        weekly: weeklyUsers || 0,\n        monthly: monthlyUsers || 0,\n        total: totalUsers || 0\n      };\n\n      setUserStats(stats);\n      console.log(`✅ User stats: ${JSON.stringify(stats)}`);\n\n    } catch (error) {\n      console.error('❌ User stats error:', error);\n      setUserStats({ daily: 0, weekly: 0, monthly: 0, total: 0 });\n    }\n  }, []);\n\n  const fetchTokenStats = useCallback(async () => {\n    try {\n      console.log('🪙 Token stats fetching from Supabase...');\n\n      const now = new Date();\n      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n      const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n      const monthAgo = new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000);\n\n      // Get total tokens\n      const { count: totalTokens, error: totalError } = await supabase\n        .from('tokens')\n        .select('*', { count: 'exact', head: true });\n\n      if (totalError) throw totalError;\n\n      // Get daily tokens\n      const { count: dailyTokens, error: dailyError } = await supabase\n        .from('tokens')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', today.toISOString());\n\n      if (dailyError) throw dailyError;\n\n      // Get weekly tokens\n      const { count: weeklyTokens, error: weeklyError } = await supabase\n        .from('tokens')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', weekAgo.toISOString());\n\n      if (weeklyError) throw weeklyError;\n\n      // Get monthly tokens\n      const { count: monthlyTokens, error: monthlyError } = await supabase\n        .from('tokens')\n        .select('*', { count: 'exact', head: true })\n        .gte('created_at', monthAgo.toISOString());\n\n      if (monthlyError) throw monthlyError;\n\n      const stats = {\n        daily: dailyTokens || 0,\n        weekly: weeklyTokens || 0,\n        monthly: monthlyTokens || 0,\n        total: totalTokens || 0\n      };\n\n      setTokenStats(stats);\n      console.log(`✅ Token stats: ${JSON.stringify(stats)}`);\n\n    } catch (error) {\n      console.error('❌ Token stats error:', error);\n      setTokenStats({ daily: 0, weekly: 0, monthly: 0, total: 0 });\n    }\n  }, []);\n\n  const getRangeStart = useCallback((r) => {\n    const now = new Date();\n    if (r === '24h') {\n      return new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    }\n    if (r === '7d') {\n      return new Date(now.getTime() - 168 * 60 * 60 * 1000); // 7 days = 168 hours\n    }\n    if (r === '30d') {\n      return new Date(now.getTime() - 720 * 60 * 60 * 1000); // 30 days = 720 hours\n    }\n    return null; // all\n  }, []);\n\n  // Range-based queries\n  const fetchRangeUsers = useCallback(async (r) => {\n    const since = getRangeStart(r);\n    if (!since) {\n      // all\n      const { count, error } = await supabase\n        .from('users')\n        .select('*', { count: 'exact', head: true });\n      if (error) throw error;\n      setRangeUsers(count || 0);\n      return;\n    }\n    const { count, error } = await supabase\n      .from('users')\n      .select('*', { count: 'exact', head: true })\n      .gte('created_at', since.toISOString());\n    if (error) throw error;\n    setRangeUsers(count || 0);\n  }, [getRangeStart]);\n\n  const fetchRangeTokensAndCreators = useCallback(async (r) => {\n    const since = getRangeStart(r);\n    if (!since) {\n      const [{ count: tokensAll, error: tokensErr }, { data: creatorsData, error: creatorsErr }] = await Promise.all([\n        supabase.from('tokens').select('*', { count: 'exact', head: true }),\n        supabase.from('tokens').select('creator_id').not('creator_id', 'is', null)\n      ]);\n      if (tokensErr) throw tokensErr;\n      if (creatorsErr) throw creatorsErr;\n      const uniqueCreatorIds = [...new Set((creatorsData || []).map(t => t.creator_id))];\n      setRangeTokens(tokensAll || 0);\n      setRangeCreators(uniqueCreatorIds.length);\n      return;\n    }\n    const [{ count: tokensCount, error: tokensErr }, { data: creatorsData, error: creatorsErr }] = await Promise.all([\n      supabase.from('tokens').select('*', { count: 'exact', head: true }).gte('created_at', since.toISOString()),\n      supabase.from('tokens').select('creator_id, created_at').gte('created_at', since.toISOString()).not('creator_id', 'is', null)\n    ]);\n    if (tokensErr) throw tokensErr;\n    if (creatorsErr) throw creatorsErr;\n    const uniqueCreatorIds = [...new Set((creatorsData || []).map(t => t.creator_id))];\n    setRangeTokens(tokensCount || 0);\n    setRangeCreators(uniqueCreatorIds.length);\n  }, [getRangeStart]);\n\n  useEffect(() => {\n    // fetch range-dependent stats when range changes\n    (async () => {\n      try {\n        await Promise.all([\n          fetchRangeUsers(range),\n          fetchRangeTokensAndCreators(range)\n        ]);\n      } catch (e) {\n        console.error('Range stats error', e);\n        setRangeUsers(0);\n        setRangeTokens(0);\n        setRangeCreators(0);\n      }\n    })();\n  }, [range, fetchRangeUsers, fetchRangeTokensAndCreators]);\n\n  const fetchUniqueCreators = useCallback(async () => {\n    try {\n      console.log('🎨 Unique creators fetching from Supabase...');\n\n      const { data, error } = await supabase\n        .from('tokens')\n        .select('creator_id')\n        .not('creator_id', 'is', null);\n\n      if (error) throw error;\n\n      // Get unique creator IDs\n      const uniqueCreatorIds = [...new Set(data.map(token => token.creator_id))];\n      const creatorCount = uniqueCreatorIds.length;\n\n      setUniqueCreators(creatorCount);\n      console.log(`✅ Unique creators: ${creatorCount}`);\n\n    } catch (error) {\n      console.error('❌ Unique creators error:', error);\n      setUniqueCreators(0);\n    }\n  }, []);\n\n  const loadInitialData = useCallback(async () => {\n    console.log('📊 Loading initial data...');\n    setLoading(true);\n\n    // fire price fetch independently so it can render ASAP\n    setPriceLoading(true);\n    fetchTokenPrice().finally(() => setPriceLoading(false));\n\n    try {\n      await Promise.all([\n        fetchTotalSupply(),\n        fetchTokenomicsData(),\n        fetchUserStats(),\n        fetchTokenStats(),\n        fetchUniqueCreators()\n      ]);\n      setLastSync(new Date().toLocaleTimeString('tr-TR'));\n    } catch (error) {\n      console.error('❌ Data loading error:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, [fetchTotalSupply, fetchTokenPrice, fetchTokenomicsData, fetchUserStats, fetchTokenStats, fetchUniqueCreators]);\n\n  // Initial load\n  useEffect(() => {\n    loadInitialData();\n  }, [loadInitialData]);\n\n  // Calculate percentages for display\n  const getBurnedPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(burnedAmount, totalSupply).toFixed(4)}%`;\n  };\n\n  const getTreasuryPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(treasuryAmount, totalSupply).toFixed(4)}%`;\n  };\n\n  const getRoyaltiesPercentage = () => {\n    if (!totalSupply || totalSupply === 0) return '0%';\n    return `${calculatePercentage(royaltiesAmount, totalSupply).toFixed(4)}%`;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header\n          tokenPrice={tokenPrice}\n          priceChange24h={priceChange24h}\n          loading={priceLoading}\n        />\n        <Dashboard\n          burnedAmount={burnedAmount}\n          treasuryAmount={treasuryAmount}\n          royaltiesAmount={royaltiesAmount}\n          totalVolume={totalVolume}\n          burnedPercentage={getBurnedPercentage()}\n          treasuryPercentage={getTreasuryPercentage()}\n          royaltiesPercentage={getRoyaltiesPercentage()}\n          loading={loading}\n          lastSync={lastSync}\n          userStats={userStats}\n          tokenStats={tokenStats}\n          uniqueCreators={uniqueCreators}\n          range={range}\n          rangeUsers={rangeUsers}\n          rangeTokens={rangeTokens}\n          rangeCreators={rangeCreators}\n          onRangeChange={setRange}\n        />\n        <footer className=\"footer\">\n          <p>$PUF data • Last sync: <span id=\"lastSync\">{lastSync}</span></p>\n          <p className=\"signature\">$PUFBoard by <span className=\"creator\">lambzerfaust.2702</span></p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}