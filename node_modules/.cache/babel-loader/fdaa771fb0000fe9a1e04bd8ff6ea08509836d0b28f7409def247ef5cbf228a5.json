{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\musta\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\data\\\\Checker-frontend-real\\\\src\\\\components\\\\MetricCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MetricRow({\n  label,\n  value\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"metric-label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"metric-value\",\n      children: value.toLocaleString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = MetricRow;\nfunction MetricCard({\n  title,\n  rows,\n  loading\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-card-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-skeleton\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this) : rows.map(r => /*#__PURE__*/_jsxDEV(MetricRow, {\n        label: r.label,\n        value: r.value\n      }, r.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MetricCard;\nexport default MetricCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"MetricRow\");\n$RefreshReg$(_c2, \"MetricCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MetricRow","label","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","_c","MetricCard","title","rows","loading","map","r","_c2","$RefreshReg$"],"sources":["C:/Users/musta/OneDrive/Masaüstü/data/Checker-frontend-real/src/components/MetricCard.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction MetricRow({ label, value }) {\r\n  return (\r\n    <div className=\"metric-row\">\r\n      <span className=\"metric-label\">{label}</span>\r\n      <span className=\"metric-value\">{value.toLocaleString()}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MetricCard({ title, rows, loading }) {\r\n  return (\r\n    <div className=\"metric-card\">\r\n      <div className=\"metric-card-header\">\r\n        <h2>{title}</h2>\r\n      </div>\r\n      <div className=\"metric-card-content\">\r\n        {loading ? (\r\n          <div className=\"metric-skeleton\">\r\n            <div />\r\n            <div />\r\n            <div />\r\n            <div />\r\n          </div>\r\n        ) : (\r\n          rows.map((r) => (\r\n            <MetricRow key={r.label} label={r.label} value={r.value} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricCard;\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EACnC,oBACEH,OAAA;IAAKI,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBL,OAAA;MAAMI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC7CT,OAAA;MAAMI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEF,KAAK,CAACO,cAAc,CAAC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV;AAACE,EAAA,GAPQV,SAAS;AASlB,SAASW,UAAUA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAC5C,oBACEf,OAAA;IAAKI,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BL,OAAA;MAAKI,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eACjCL,OAAA;QAAAK,QAAA,EAAKQ;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,eACNT,OAAA;MAAKI,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EACjCU,OAAO,gBACNf,OAAA;QAAKI,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BL,OAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPT,OAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPT,OAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACPT,OAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,GAENK,IAAI,CAACE,GAAG,CAAEC,CAAC,iBACTjB,OAAA,CAACC,SAAS;QAAeC,KAAK,EAAEe,CAAC,CAACf,KAAM;QAACC,KAAK,EAAEc,CAAC,CAACd;MAAM,GAAxCc,CAAC,CAACf,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmC,CAC3D;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACS,GAAA,GAtBQN,UAAU;AAwBnB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}